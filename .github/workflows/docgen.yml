name: Generate Documentation

on:
  push:
    branches-ignore:
      - master

jobs:
  build-sources:
    name: Generate vimdoc from emmylua using lemmy-help
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
    steps:
      - uses: actions/checkout@v3
      - run: date +%F > todays-date
      - name: Restore cache for today's nightly.
        uses: actions/cache@v3
        with:
          path: _neovim
          key: ${{ runner.os }}-${{ matrix.url }}-${{ hashFiles('todays-date') }}
      - name: Prepare
        run: |
          test -d _neovim || {
            mkdir -p _neovim
            curl -sL ${{ matrix.url }} | tar xzf - --strip-components=1 -C "${PWD}/_neovim"
          }
          test -d _lemmy-help || {
            mkdir -p _lemmy-help/bin
            curl -Lq https://github.com/numToStr/lemmy-help/releases/latest/download/lemmy-help-x86_64-unknown-linux-gnu.tar.gz | tar xzf - -C _lemmy-help/bin
          }
          git clone --depth 1 https://github.com/nvim-lua/plenary.nvim ~/.local/share/nvim/site/pack/vendor/start/plenary.nvim
          ln -s $(pwd) ~/.local/share/nvim/site/pack/vendor/start
      - name: Generate
        run: |
          export PATH="${PWD}/_neovim/bin:${PWD}/_lemmy-help/bin:${PATH}"
          mkdir --parents doc
          nvim --headless --noplugin -u .github/scripts/minimal.lua -c "luafile ./.github/scripts/docs.lua" -c 'qa'
      - name: Commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MSG: |
            [docgen] Update doc/colo.txt
            skip-checks: true
        run: |
          git config user.email "actions@github"
          git config user.name "Github Actions"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git add doc/
          git diff --quiet && git diff --staged --quiet || (git commit -m "${COMMIT_MSG}"; git push origin HEAD:${GITHUB_REF})
